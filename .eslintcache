[{"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\index.js":"1","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\App.js":"2","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Login.js":"3","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\PrivateRoutes.js":"4","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Header.js":"5","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Profile.js":"6","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Explore.js":"7","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Signup.js":"8","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Footer.js":"9","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Not_Found.js":"10","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Post.js":"11","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Home.js":"12","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\Context\\Firebase\\FireState.js":"13","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\firebase\\config.js":"14","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Loader.js":"15","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\Context\\Firebase\\FirebaseContext.js":"16","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Posts.js":"17","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Saved.js":"18","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\FeedPost.js":"19","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\Context\\Firebase\\FireReducer.js":"20"},{"size":434,"mtime":1640246126960,"results":"21","hashOfConfig":"22"},{"size":1583,"mtime":1640246126917,"results":"23","hashOfConfig":"22"},{"size":5814,"mtime":1640246126925,"results":"24","hashOfConfig":"22"},{"size":593,"mtime":1640246126928,"results":"25","hashOfConfig":"22"},{"size":7107,"mtime":1640246126922,"results":"26","hashOfConfig":"22"},{"size":22474,"mtime":1640246126928,"results":"27","hashOfConfig":"22"},{"size":2955,"mtime":1640246126920,"results":"28","hashOfConfig":"22"},{"size":7997,"mtime":1640246126930,"results":"29","hashOfConfig":"22"},{"size":366,"mtime":1640253620669,"results":"30","hashOfConfig":"22"},{"size":220,"mtime":1640246126926,"results":"31","hashOfConfig":"22"},{"size":16637,"mtime":1640253671370,"results":"32","hashOfConfig":"22"},{"size":9452,"mtime":1640253665879,"results":"33","hashOfConfig":"22"},{"size":6626,"mtime":1640246126919,"results":"34","hashOfConfig":"22"},{"size":540,"mtime":1640253568374,"results":"35","hashOfConfig":"22"},{"size":380,"mtime":1640246126924,"results":"36","hashOfConfig":"22"},{"size":118,"mtime":1640246126919,"results":"37","hashOfConfig":"22"},{"size":4148,"mtime":1640246126927,"results":"38","hashOfConfig":"22"},{"size":2789,"mtime":1640246126929,"results":"39","hashOfConfig":"22"},{"size":15673,"mtime":1640253796377,"results":"40","hashOfConfig":"22"},{"size":1038,"mtime":1640246126918,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwrmzd",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\index.js",[],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\App.js",["86"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Login.js",["87","88","89","90","91","92","93","94","95","96","97","98"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\PrivateRoutes.js",[],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Header.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Profile.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Explore.js",["149","150","151","152","153","154","155"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Signup.js",["156","157","158","159","160","161","162","163","164","165","166","167","168"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Footer.js",[],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Not_Found.js",["169"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Post.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { Link, useParams, Redirect } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport Loader from \"./Loader\";\nimport UserImage from \"../images/user.svg\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { Popconfirm } from \"antd\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\n\nconst Post = (props) => {\n  const { postId } = useParams();\n  const [post, setPost] = useState(null);\n  const [owner, setOwner] = useState(null);\n  const [heart, setHeart] = useState(false);\n  const myRef = useRef(null);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [latestComments, setLatest] = useState([]);\n  var l;\n\n  const arraysEqual = (a, b) => {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n\n    for (var i = 0; i < a.length; ++i) {\n      if (a[i].comment != b[i].comment || a[i].time != b[i].time) return false;\n    }\n    return true;\n  };\n\n  const handleConfirm = () => {\n    var postRef = firebase.storage().ref().child(`/posts/${post.id}`);\n    postRef\n      .delete()\n      .then(function () {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .delete()\n          .then(() => {\n            props.history.push(\"/\");\n          });\n      })\n      .catch(function (error) {\n        // Uh-oh, an error occurred!\n      });\n  };\n  const { user, updateProfile } = useContext(FirebaseContext);\n\n  const compare = (a, b) => {\n    return a.time < b.time;\n  };\n\n  const reload = () => {\n    firebase\n      .firestore()\n      .doc(`/posts/${postId}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n          if (myRef && myRef.current)\n            myRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .doc(`/posts/${postId}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [comments]);\n\n  const handleDBClick = () => {\n    setHeart(true);\n    setTimeout(() => {\n      setHeart(false);\n    }, 800);\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleLike = () => {\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      } else {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n          .then((data) => {\n            l = data.data().likes;\n            l = l.filter((like) => like !== user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleBookmark = () => {\n    if (user.bookmarks) {\n      if (!user.bookmarks.includes(post.id)) {\n        let bookmarks = user.bookmarks;\n        bookmarks.push(post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      } else {\n        let bookmarks = user.bookmarks;\n        bookmarks = bookmarks.filter((like) => like !== post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      }\n    } else {\n      let bookmarks = [];\n      bookmarks.push(post.id);\n      firebase\n        .firestore()\n        .doc(`/users/${user.email}`)\n        .update({\n          bookmarks,\n        })\n        .then(() => {});\n    }\n  };\n\n  const handleComment = (e) => {\n    e.preventDefault();\n    if (comment.length) {\n      let newComment = {};\n      newComment.time = Date.now();\n      newComment.comment = comment;\n      newComment.email = user.email;\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().comments) {\n            let comments = data.data().comments;\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          } else {\n            let comments = [];\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          }\n        });\n    }\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  return (\n    <div>\n      {!post || !owner ? (\n        <Loader />\n      ) : (\n        <div className=\"post_grid\">\n          <div className=\"post_photo_grid\">\n            <div className=\"post_info_grid\">\n              {owner.photoURL ? (\n                <img src={owner.photoURL} className=\"image_circle\" />\n              ) : (\n                <img src={UserImage} className=\"image_circle\" />\n              )}\n              <div>\n                <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                  {owner.userName}\n                </Link>\n              </div>\n              {(user.email === post.email ||\n                user.email == \"ivanshajpoonia@gmail.com\") && (\n                <Popconfirm\n                  placement=\"top\"\n                  title=\"Delete this post?\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  onConfirm={handleConfirm}\n                >\n                  <EllipsisOutlined\n                    style={{ fontSize: \"1.5rem\", marginRight: \"0.5rem\" }}\n                    className=\"delete_post\"\n                  />\n                </Popconfirm>\n              )}\n            </div>\n            <div className=\"inner_div1\">\n              <img\n                src={post.url}\n                className=\"post_image\"\n                onDoubleClick={handleDBClick}\n              />\n              {heart && <i className=\"fa fa-heart\" aria-hidden=\"true\" />}\n            </div>\n          </div>\n          <div className=\"bio_grid\">\n            {owner.photoURL ? (\n              <img src={owner.photoURL} className=\"image_circle1\" />\n            ) : (\n              <img src={UserImage} className=\"image_circle1\" />\n            )}\n            <div>\n              <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                {\" \"}\n                <span className=\"post_userName\">{owner.userName}</span>{\" \"}\n              </Link>{\" \"}\n              {post.caption}\n            </div>\n          </div>\n          <div className=\"comments_grid\">\n            <div className=\"grid_c_div\">\n              {comments.length ? (\n                <>\n                  {comments.map((c) => (\n                    <div className=\"comment_grid\">\n                      {c.photoURL ? (\n                        <img src={c.photoURL} className=\"comment_img\" />\n                      ) : (\n                        <img src={UserImage} className=\"comment_img\" />\n                      )}\n\n                      <div>\n                        {\" \"}\n                        <span className=\"post_userName\">\n                          <Link\n                            to={`/${c.userName}`}\n                            style={{ color: \"black\" }}\n                          >\n                            {c.userName}\n                          </Link>\n                        </span>\n                        &nbsp;\n                        <span>{c.comment}</span>\n                      </div>\n                    </div>\n                  ))}\n                  <div ref={myRef}></div>\n                </>\n              ) : null}\n            </div>\n          </div>\n          {latestComments.length ? (\n            <div className=\"mobile_comments\">\n              <span className=\"view_comments\">\n                View all {comments.length} comments\n              </span>\n              {latestComments.length > 0 &&\n                latestComments.map((com) => (\n                  <div>\n                    <span className=\"post_userName\">\n                      <Link to={`/${com.userName}`} style={{ color: \"black\" }}>\n                        {com.userName}\n                      </Link>\n                    </span>\n                    &nbsp;\n                    {com.comment}\n                  </div>\n                ))}\n            </div>\n          ) : null}\n\n          <div className=\"compo_grid\">\n            <div className=\"heart_grid\">\n              <div>\n                <i\n                  class={`${\n                    !post.likes\n                      ? `fa fa-heart-o`\n                      : post.likes.includes(user.email)\n                      ? `fa fa-heart`\n                      : `fa fa-heart-o`\n                  }`}\n                  aria-hidden=\"true\"\n                  onClick={handleLike}\n                />\n                <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\n                <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\n              </div>\n              <i\n                className={`${\n                  !user.bookmarks\n                    ? `fa fa-bookmark-o bookmark`\n                    : user.bookmarks.includes(post.id)\n                    ? `fa fa-bookmark bookmark`\n                    : `fa fa-bookmark-o bookmark`\n                }`}\n                aria-hidden=\"true\"\n                onClick={handleBookmark}\n                style={{ marginRight: \"0.5rem\" }}\n              ></i>\n            </div>\n            <div className=\"separate\">\n              {post.likes ? (\n                <span className=\"likes_div\">{post.likes.length} likes</span>\n              ) : (\n                <span className=\"likes_div\">0 likes</span>\n              )}\n            </div>\n            <div className=\"text_input_post\">\n              <form onSubmit={handleComment}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  onChange={(e) => setComment(e.target.value)}\n                  value={comment}\n                />\n                <button\n                  className=\"post_comment\"\n                  onClick={handleComment}\n                  disabled={comment.length ? undefined : \"disabled\"}\n                >\n                  Post\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"hidden_input\">\n            <div className=\"text_input_post1\">\n              <form onSubmit={handleComment}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  onChange={(e) => setComment(e.target.value)}\n                  value={comment}\n                />\n                <button\n                  className=\"post_comment\"\n                  type=\"submit\"\n                  disabled={comment.length ? undefined : \"disabled\"}\n                >\n                  Post\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n",["188","189"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Home.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import React, { useEffect, useState, useContext } from \"react\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport firebase from \"firebase/app\";\nimport FeedPost from \"./FeedPost\";\nimport Loader from \"./Loader\";\nimport UserImage from \"../images/user.svg\";\nimport Social from \"../images/social.svg\";\nimport { Link } from \"react-router-dom\";\nconst Home = () => {\n  const { user, updateProfile } = useContext(FirebaseContext);\n  const [posts, setPosts] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState(null);\n\n  const func = (a, b) => {\n    return 0.5 - Math.random();\n  };\n  const handleFollow1 = (userEmail) => {\n    let following = user.following;\n    if (!following) {\n      following = [];\n    }\n    following.push(userEmail);\n    firebase\n      .firestore()\n      .doc(`/users/${user.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(userEmail)\n          .get()\n          .then((data) => {\n            let followers = data.data().followers;\n            if (!followers) followers = [];\n            followers.push(user.email);\n            firebase.firestore().collection(\"users\").doc(userEmail).update({\n              followers: followers,\n            });\n          });\n      });\n  };\n  const handleUnFollow1 = (userEmail) => {\n    let following = user.following;\n    following = following.filter((user1) => {\n      return !(user1 == userEmail);\n    });\n    firebase\n      .firestore()\n      .doc(`/users/${user.email}`)\n      .update({\n        following: following,\n      })\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(userEmail)\n          .get()\n          .then((data) => {\n            let followers = data.data().followers;\n            followers = followers.filter((user2) => {\n              return !(user2 == user.email);\n            });\n            firebase.firestore().doc(`/users/${userEmail}`).update({\n              followers: followers,\n            });\n          });\n      });\n  };\n  useEffect(() => {\n    if (user) {\n      if (user?.following?.length) {\n        firebase\n          .firestore()\n          .collection(\"posts\")\n          .where(\"email\", \"in\", [...user.following, user.email])\n          .limit(10)\n          .get()\n          .then((data) => {\n            if (data.docs.length) {\n              let x = [];\n              data.docs.forEach((post) => {\n                x.push(post.data().id);\n              });\n              setPosts(x);\n              setLoading(false);\n            }\n          });\n      }\n\n      if (user?.following?.length > 0) {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .where(\"email\", \"not-in\", user.following)\n          .get()\n          .then((data) => {\n            if (data.docs) {\n              let x = [];\n              data.docs.forEach((u) => {\n                if (\n                  u.data().email !== user.email &&\n                  u.data().email != \"ivanshajpoonia@gmail.com\"\n                )\n                  x.push(u.data());\n              });\n              x.sort(func);\n              if (!user?.following?.includes(\"ivanshajpoonia@gmail.com\")) {\n                firebase\n                  .firestore()\n                  .doc(`/users/ivanshajpoonia@gmail.com`)\n                  .get()\n                  .then((data) => {\n                    x.unshift(data.data());\n                    x.sort(func);\n                    let z = x.slice(0, 4);\n\n                    setUsers(z);\n                  });\n              } else {\n                let z = x.slice(0, 4);\n                setUsers(z);\n              }\n            }\n          });\n      } else {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .get()\n          .then((data) => {\n            if (data.docs) {\n              let x = [];\n              data.docs.forEach((u) => {\n                if (\n                  u.data().email != user.email &&\n                  u.data().email != \"ivanshajpoonia@gmail.com\"\n                )\n                  x.push(u.data());\n              });\n              if (!user?.following?.includes(\"ivanshajpoonia@gmail.com\")) {\n                firebase\n                  .firestore()\n                  .doc(`/users/ivanshajpoonia@gmail.com`)\n                  .get()\n                  .then((data) => {\n                    x.unshift(data.data());\n                    x.sort(func);\n                    let z = x.slice(0, 4);\n                    setUsers(z);\n                  });\n              }\n              x.sort(func);\n              let z = x.slice(0, 4);\n              setUsers(z);\n            }\n          });\n      }\n    }\n\n    setLoading(false);\n  }, []);\n  return (\n    <div>\n      {loading || !users ? (\n        <Loader />\n      ) : posts ? (\n        <div className=\"home_grid\">\n          <div>\n            {posts.map((post) => (\n              <FeedPost id={post} />\n            ))}\n          </div>\n          <div className=\"sidebar\">\n            <div className=\"fixed_div\">\n              {user.photoURL ? (\n                <img src={user.photoURL} className=\"user_home\" />\n              ) : (\n                <img src={UserImage} className=\"user_home\" />\n              )}\n              <div className=\"serach_flex\">\n                <Link to={`/${user.userName}`}>\n                  <span className=\"userName_search\">{user.userName}</span>\n                </Link>\n                <span className=\"name_search\">{user.name}</span>\n              </div>\n            </div>\n            {users?.length ? (\n              <div className=\"suggestions_div\">\n                <h3>Suggestions for you</h3>\n                <div>\n                  {users.map((u) => (\n                    <div className=\"suggest_div\">\n                      {\" \"}\n                      {u.photoURL ? (\n                        <img src={u.photoURL} className=\"user_home\" />\n                      ) : (\n                        <img src={UserImage} className=\"user_home\" />\n                      )}\n                      <div className=\"serach_flex\">\n                        <Link to={`/${u.userName}`}>\n                          <span className=\"userName_search\">{u.userName}</span>\n                        </Link>\n                        <span className=\"name_search\">{u.name}</span>\n                      </div>\n                      {user?.following.includes(u.email) ? (\n                        <button\n                          className=\"un_home\"\n                          onClick={() => handleUnFollow1(u.email)}\n                        >\n                          Unfollow\n                        </button>\n                      ) : (\n                        <button\n                          className=\"follow_home\"\n                          onClick={() => handleFollow1(u.email)}\n                        >\n                          {\" \"}\n                          Follow\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      ) : (\n        <div className=\"home_flex\">\n          <div className=\"sidebar1\">\n            <div className=\"fixed_div1\">\n              {user.photoURL ? (\n                <img src={user.photoURL} className=\"user_home\" />\n              ) : (\n                <img src={UserImage} className=\"user_home\" />\n              )}\n              <div className=\"serach_flex\">\n                <Link to={`/${user.userName}`}>\n                  <span className=\"userName_search\">{user.userName}</span>\n                </Link>\n                <span className=\"name_search\">{user.name}</span>\n              </div>\n            </div>\n            <div className=\"suggestions_div1\">\n              <h3>Suggestions for you</h3>\n              <div>\n                {users.map((u) => (\n                  <div className=\"suggest_div\">\n                    {\" \"}\n                    {u.photoURL ? (\n                      <img src={u.photoURL} className=\"user_home\" />\n                    ) : (\n                      <img src={UserImage} className=\"user_home\" />\n                    )}\n                    <div className=\"serach_flex\">\n                      <Link to={`/${u.userName}`}>\n                        <span className=\"userName_search\">{u.userName}</span>\n                      </Link>\n                      <span className=\"name_search\">{u.name}</span>\n                    </div>\n                    {user?.following?.includes(u.email) ? (\n                      <button\n                        className=\"un_home\"\n                        onClick={() => handleUnFollow1(u.email)}\n                      >\n                        Unfollow\n                      </button>\n                    ) : (\n                      <button\n                        className=\"follow_home\"\n                        onClick={() => handleFollow1(u.email)}\n                      >\n                        {\" \"}\n                        Follow\n                      </button>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div>\n            <img src={Social} className=\"social_image\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\Context\\Firebase\\FireState.js",["206","207"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\firebase\\config.js",[],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Loader.js",[],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\Context\\Firebase\\FirebaseContext.js",["208"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Posts.js",["209","210","211","212","213","214","215"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\Saved.js",["216","217","218","219","220","221"],"D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\components\\FeedPost.js",["222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport firebase from \"firebase/app\";\nimport Loader from \"./Loader\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { Popconfirm } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\nimport UserImage from \"../images/user.svg\";\n\nconst FeedPost = (props) => {\n  const [post, setPost] = useState(null);\n  const [owner, setOwner] = useState(null);\n  const [heart, setHeart] = useState(false);\n  const myRef = useRef(null);\n\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [latestComments, setLatest] = useState([]);\n  let l;\n\n  const handleConfirm = () => {\n    var postRef = firebase.storage().ref().child(`/posts/${post.id}`);\n    postRef\n      .delete()\n      .then(function () {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .delete()\n          .then(() => {\n            props.history.push(\"/\");\n          });\n      })\n      .catch(function (error) {\n        // Uh-oh, an error occurred!\n      });\n  };\n  const { user, updateProfile } = useContext(FirebaseContext);\n\n  const compare = (a, b) => {\n    return a.time < b.time;\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .doc(`/posts/${props.id}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n  }, []);\n\n  const reload = () => {\n    firebase\n      .firestore()\n      .doc(`/posts/${post.id}`)\n      .get()\n      .then((data) => {\n        if (!data.exists) {\n          props.history.push(\"/\");\n        } else {\n          if (data.data().comments) {\n            let x = data.data().comments;\n            x.sort(compare);\n\n            let newComments = [];\n            let resol = [];\n            for (let i = 0; i < x.length; i++) {\n              resol.push(\n                firebase\n                  .firestore()\n                  .doc(`/users/${x[i].email}`)\n                  .get()\n                  .then((u) => {\n                    let p = {};\n                    p = {\n                      ...x[i],\n                      userName: u.data().userName,\n                      photoURL: u.data().photoURL,\n                    };\n                    return p;\n                  })\n              );\n            }\n            Promise.all(resol).then((ans) => {\n              setComments([...ans]);\n            });\n\n            let count = 0;\n            var newArr = [];\n\n            for (let i = x.length - 1; i >= 0; i--) {\n              if (count == 2) break;\n              firebase\n                .firestore()\n                .doc(`/users/${x[i].email}`)\n                .get()\n                .then((u) => {\n                  let temp = {};\n                  temp.comment = x[i].comment;\n                  temp.time = x[i].comment;\n                  temp.userName = u.data().userName;\n                  temp.photoURL = u.data().photoURL;\n                  newArr.push(temp);\n                });\n              count += 1;\n            }\n            setLatest(newArr);\n          }\n          setPost(data.data());\n          if (myRef && myRef.current)\n            myRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n          firebase\n            .firestore()\n            .doc(`/users/${data.data().email}`)\n            .get()\n            .then((u) => {\n              setOwner(u.data());\n            });\n        }\n      });\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  const handleDBClick = () => {\n    setHeart(true);\n    setTimeout(() => {\n      setHeart(false);\n    }, 800);\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleLike = () => {\n    if (post.likes) {\n      if (!post.likes.includes(user.email)) {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n\n          .then((data) => {\n            l = data.data().likes;\n            l.push(user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      } else {\n        firebase\n          .firestore()\n          .doc(`/posts/${post.id}`)\n          .get()\n          .then((data) => {\n            l = data.data().likes;\n            l = l.filter((like) => like !== user.email);\n            firebase.firestore().doc(`/posts/${post.id}`).update({\n              likes: l,\n            });\n          })\n          .then(() => {\n            setPost({ ...post, likes: l });\n          });\n      }\n    } else {\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().likes) l = data.data().likes;\n          else l = [];\n          l.push(user.email);\n          firebase.firestore().doc(`/posts/${post.id}`).update({\n            likes: l,\n          });\n        })\n        .then(() => {\n          setPost({ ...post, likes: l });\n        });\n    }\n  };\n\n  const handleBookmark = () => {\n    console.log(user);\n    if (user.bookmarks) {\n      if (!user.bookmarks.includes(post.id)) {\n        let bookmarks = user.bookmarks;\n        bookmarks.push(post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      } else {\n        let bookmarks = user.bookmarks;\n        bookmarks = bookmarks.filter((like) => like !== post.id);\n        firebase\n          .firestore()\n          .doc(`/users/${user.email}`)\n          .update({\n            bookmarks,\n          })\n          .then(() => {});\n      }\n    } else {\n      let bookmarks = [];\n      bookmarks.push(post.id);\n      firebase\n        .firestore()\n        .doc(`/users/${user.email}`)\n        .update({\n          bookmarks,\n        })\n        .then(() => {});\n    }\n  };\n\n  const handleComment = (e) => {\n    e.preventDefault();\n    if (comment.length) {\n      let newComment = {};\n      newComment.time = Date.now();\n      newComment.comment = comment;\n      newComment.email = user.email;\n      firebase\n        .firestore()\n        .doc(`/posts/${post.id}`)\n        .get()\n        .then((data) => {\n          if (data.data().comments) {\n            let comments = data.data().comments;\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          } else {\n            let comments = [];\n            comments.push(newComment);\n            firebase\n              .firestore()\n              .doc(`/posts/${post.id}`)\n              .update({ comments })\n              .then(() => {\n                reload();\n              });\n          }\n        });\n    }\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setComment(\"\");\n  };\n\n  useEffect(() => {\n    if (myRef && myRef.current)\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [comments]);\n\n  return (\n    <div>\n      {!post || !owner ? (\n        <Loader />\n      ) : (\n        <div className=\"post_grid1\">\n          <div className=\"post_photo_grid1\">\n            <div className=\"post_info_grid\">\n              {owner.photoURL ? (\n                <img src={owner.photoURL} className=\"image_circle\" />\n              ) : (\n                <img src={UserImage} className=\"image_circle\" />\n              )}\n              <div>\n                <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                  {owner.userName}\n                </Link>\n              </div>\n              {(user.email === post.email ||\n                user.email === \"ivanshajpoonia@gmail.com\") && (\n                <Popconfirm\n                  placement=\"top\"\n                  title=\"Delete this post?\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  onConfirm={handleConfirm}\n                >\n                  <EllipsisOutlined\n                    style={{ fontSize: \"1.5rem\", marginRight: \"0.5rem\" }}\n                    className=\"delete_post\"\n                  />\n                </Popconfirm>\n              )}\n            </div>\n            <div className=\"inner_div1\">\n              <img\n                src={post.url}\n                loading=\"lazy\"\n                className=\"post_image1\"\n                onDoubleClick={handleDBClick}\n              />\n              {heart && <i className=\"fa fa-heart\" aria-hidden=\"true\" />}\n            </div>\n          </div>\n          <div className=\"bio_grid1\">\n            {owner.photoURL ? (\n              <img src={owner.photoURL} className=\"image_circle1\" />\n            ) : (\n              <img src={UserImage} className=\"image_circle1\" />\n            )}\n            <div>\n              <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\n                {\" \"}\n                <span className=\"post_userName\">{owner.userName}</span>{\" \"}\n              </Link>{\" \"}\n              {post.caption}\n            </div>\n          </div>\n          <div className=\"comments_grid1\">\n            <div className=\"grid_c_div1\">\n              {comments.length ? (\n                <>\n                  {comments.map((c) => (\n                    <div className=\"comment_grid\">\n                      <img src={c.photoURL} className=\"comment_img\" />\n                      <div>\n                        {\" \"}\n                        <span className=\"post_userName\">\n                          <Link\n                            href={`/${c.userName}`}\n                            style={{ color: \"black\" }}\n                          >\n                            {c.userName}\n                          </Link>\n                        </span>\n                        <span>{c.comment}</span>\n                      </div>\n                    </div>\n                  ))}\n                  <div ref={myRef}></div>\n                </>\n              ) : null}\n            </div>\n          </div>\n          {comments.length ? (\n            <div className=\"mobile_comments1\">\n              <span className=\"view_comments\">\n                View all {comments.length} comments\n              </span>\n              {latestComments.length\n                ? latestComments.map((com) => (\n                    <div>\n                      <span className=\"post_userName\">\n                        <Link\n                          to={`/${com.userName}`}\n                          style={{ color: \"black\" }}\n                        >\n                          {com.userName}\n                        </Link>\n                      </span>\n                      &nbsp;\n                      {com.comment}\n                    </div>\n                  ))\n                : null}\n            </div>\n          ) : null}\n\n          <div className=\"compo_grid1\">\n            <div className=\"heart_grid\">\n              <div>\n                <i\n                  class={`${\n                    !post.likes\n                      ? `fa fa-heart-o`\n                      : post.likes.includes(user.email)\n                      ? `fa fa-heart`\n                      : `fa fa-heart-o`\n                  }`}\n                  aria-hidden=\"true\"\n                  onClick={handleLike}\n                />\n                <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\n                <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\n              </div>\n              <i\n                className={`${\n                  !user.bookmarks\n                    ? `fa fa-bookmark-o bookmark`\n                    : user.bookmarks.includes(post.id)\n                    ? `fa fa-bookmark bookmark`\n                    : `fa fa-bookmark-o bookmark`\n                }`}\n                aria-hidden=\"true\"\n                onClick={handleBookmark}\n                style={{ marginRight: \"0.5rem\" }}\n              ></i>\n            </div>\n            <div className=\"separate\">\n              {post.likes ? (\n                <span className=\"likes_div\">{post.likes.length} likes</span>\n              ) : (\n                <span className=\"likes_div\">0 likes</span>\n              )}\n            </div>\n          </div>\n          <div className=\"hidden_input1\">\n            <div className=\"text_input_post2\">\n              <form onSubmit={handleComment}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  onChange={(e) => setComment(e.target.value)}\n                  value={comment}\n                />\n                <button\n                  className=\"post_comment\"\n                  type=\"submit\"\n                  disabled={comment.length ? undefined : \"disabled\"}\n                >\n                  Post\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FeedPost;\n","D:\\Code\\More Code\\Mihir Gupta\\Instagram-Clone\\Instagram-Clone\\src\\Context\\Firebase\\FireReducer.js",["234","235","236"],{"ruleId":"237","severity":1,"message":"238","line":6,"column":25,"nodeType":"239","messageId":"240","endLine":6,"endColumn":34},{"ruleId":"237","severity":1,"message":"241","line":2,"column":31,"nodeType":"239","messageId":"240","endLine":2,"endColumn":39},{"ruleId":"237","severity":1,"message":"242","line":4,"column":3,"nodeType":"239","messageId":"240","endLine":4,"endColumn":15},{"ruleId":"237","severity":1,"message":"243","line":12,"column":10,"nodeType":"239","messageId":"240","endLine":12,"endColumn":14},{"ruleId":"237","severity":1,"message":"244","line":15,"column":10,"nodeType":"239","messageId":"240","endLine":15,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":36,"column":6,"nodeType":"247","endLine":36,"endColumn":13,"suggestions":"248"},{"ruleId":"245","severity":1,"message":"249","line":40,"column":6,"nodeType":"247","endLine":40,"endColumn":12,"suggestions":"250"},{"ruleId":"237","severity":1,"message":"251","line":96,"column":13,"nodeType":"239","messageId":"240","endLine":96,"endColumn":24},{"ruleId":"237","severity":1,"message":"252","line":102,"column":13,"nodeType":"239","messageId":"240","endLine":102,"endColumn":22},{"ruleId":"237","severity":1,"message":"253","line":103,"column":13,"nodeType":"239","messageId":"240","endLine":103,"endColumn":25},{"ruleId":"237","severity":1,"message":"254","line":105,"column":13,"nodeType":"239","messageId":"240","endLine":105,"endColumn":18},{"ruleId":"237","severity":1,"message":"255","line":107,"column":13,"nodeType":"239","messageId":"240","endLine":107,"endColumn":23},{"ruleId":"256","severity":1,"message":"257","line":124,"column":13,"nodeType":"258","endLine":124,"endColumn":61},{"ruleId":"237","severity":1,"message":"259","line":11,"column":26,"nodeType":"239","messageId":"240","endLine":11,"endColumn":39},{"ruleId":"237","severity":1,"message":"260","line":12,"column":19,"nodeType":"239","messageId":"240","endLine":12,"endColumn":23},{"ruleId":"237","severity":1,"message":"244","line":13,"column":10,"nodeType":"239","messageId":"240","endLine":13,"endColumn":23},{"ruleId":"237","severity":1,"message":"261","line":18,"column":5,"nodeType":"239","messageId":"240","endLine":18,"endColumn":18},{"ruleId":"245","severity":1,"message":"246","line":46,"column":6,"nodeType":"247","endLine":46,"endColumn":14,"suggestions":"262"},{"ruleId":"245","severity":1,"message":"246","line":78,"column":6,"nodeType":"247","endLine":78,"endColumn":14,"suggestions":"263"},{"ruleId":"237","severity":1,"message":"264","line":94,"column":9,"nodeType":"239","messageId":"240","endLine":94,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":130,"column":24,"nodeType":"267","messageId":"268","endLine":130,"endColumn":26},{"ruleId":"256","severity":1,"message":"257","line":146,"column":15,"nodeType":"258","endLine":146,"endColumn":56},{"ruleId":"256","severity":1,"message":"257","line":163,"column":25,"nodeType":"258","endLine":163,"endColumn":75},{"ruleId":"256","severity":1,"message":"257","line":165,"column":25,"nodeType":"258","endLine":165,"endColumn":71},{"ruleId":"256","severity":1,"message":"257","line":180,"column":17,"nodeType":"258","endLine":180,"endColumn":35},{"ruleId":"256","severity":1,"message":"257","line":185,"column":17,"nodeType":"258","endLine":185,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":189,"column":15,"nodeType":"258","endLine":193,"endColumn":17},{"ruleId":"256","severity":1,"message":"257","line":199,"column":19,"nodeType":"258","endLine":199,"endColumn":70},{"ruleId":"256","severity":1,"message":"257","line":201,"column":19,"nodeType":"258","endLine":201,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":206,"column":15,"nodeType":"258","endLine":206,"endColumn":58},{"ruleId":"237","severity":1,"message":"260","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"269","line":3,"column":27,"nodeType":"239","messageId":"240","endLine":3,"endColumn":35},{"ruleId":"237","severity":1,"message":"270","line":6,"column":38,"nodeType":"239","messageId":"240","endLine":6,"endColumn":44},{"ruleId":"237","severity":1,"message":"244","line":11,"column":10,"nodeType":"239","messageId":"240","endLine":11,"endColumn":23},{"ruleId":"237","severity":1,"message":"271","line":13,"column":3,"nodeType":"239","messageId":"240","endLine":13,"endColumn":17},{"ruleId":"237","severity":1,"message":"272","line":14,"column":3,"nodeType":"239","messageId":"240","endLine":14,"endColumn":16},{"ruleId":"237","severity":1,"message":"273","line":15,"column":3,"nodeType":"239","messageId":"240","endLine":15,"endColumn":18},{"ruleId":"237","severity":1,"message":"274","line":21,"column":8,"nodeType":"239","messageId":"240","endLine":21,"endColumn":12},{"ruleId":"237","severity":1,"message":"275","line":24,"column":11,"nodeType":"239","messageId":"240","endLine":24,"endColumn":19},{"ruleId":"237","severity":1,"message":"276","line":26,"column":32,"nodeType":"239","messageId":"240","endLine":26,"endColumn":38},{"ruleId":"237","severity":1,"message":"277","line":35,"column":9,"nodeType":"239","messageId":"240","endLine":35,"endColumn":12},{"ruleId":"237","severity":1,"message":"278","line":41,"column":10,"nodeType":"239","messageId":"240","endLine":41,"endColumn":17},{"ruleId":"245","severity":1,"message":"279","line":62,"column":6,"nodeType":"247","endLine":62,"endColumn":8,"suggestions":"280"},{"ruleId":"237","severity":1,"message":"281","line":178,"column":26,"nodeType":"239","messageId":"240","endLine":178,"endColumn":43},{"ruleId":"265","severity":1,"message":"282","line":188,"column":62,"nodeType":"267","messageId":"268","endLine":188,"endColumn":64},{"ruleId":"265","severity":1,"message":"266","line":297,"column":22,"nodeType":"267","messageId":"268","endLine":297,"endColumn":24},{"ruleId":"265","severity":1,"message":"266","line":308,"column":26,"nodeType":"267","messageId":"268","endLine":308,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":318,"column":22,"nodeType":"267","messageId":"268","endLine":318,"endColumn":24},{"ruleId":"265","severity":1,"message":"266","line":335,"column":30,"nodeType":"267","messageId":"268","endLine":335,"endColumn":32},{"ruleId":"237","severity":1,"message":"283","line":355,"column":9,"nodeType":"239","messageId":"240","endLine":355,"endColumn":25},{"ruleId":"256","severity":1,"message":"257","line":381,"column":25,"nodeType":"258","endLine":381,"endColumn":56},{"ruleId":"256","severity":1,"message":"257","line":383,"column":25,"nodeType":"258","endLine":383,"endColumn":48},{"ruleId":"256","severity":1,"message":"257","line":433,"column":25,"nodeType":"258","endLine":433,"endColumn":56},{"ruleId":"256","severity":1,"message":"257","line":435,"column":25,"nodeType":"258","endLine":435,"endColumn":48},{"ruleId":"256","severity":1,"message":"257","line":477,"column":19,"nodeType":"258","endLine":477,"endColumn":69},{"ruleId":"256","severity":1,"message":"257","line":479,"column":19,"nodeType":"258","endLine":479,"endColumn":65},{"ruleId":"256","severity":1,"message":"257","line":486,"column":21,"nodeType":"258","endLine":489,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":492,"column":36,"nodeType":"267","messageId":"268","endLine":492,"endColumn":38},{"ruleId":"284","severity":1,"message":"285","line":548,"column":23,"nodeType":"258","endLine":552,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":569,"column":19,"nodeType":"258","endLine":572,"endColumn":21},{"ruleId":"256","severity":1,"message":"257","line":574,"column":19,"nodeType":"258","endLine":577,"endColumn":21},{"ruleId":"256","severity":1,"message":"257","line":673,"column":21,"nodeType":"258","endLine":677,"endColumn":23},{"ruleId":"256","severity":1,"message":"257","line":689,"column":23,"nodeType":"258","endLine":689,"endColumn":63},{"ruleId":"237","severity":1,"message":"286","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"237","severity":1,"message":"260","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"237","severity":1,"message":"287","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":14},{"ruleId":"237","severity":1,"message":"288","line":10,"column":11,"nodeType":"239","messageId":"240","endLine":10,"endColumn":15},{"ruleId":"237","severity":1,"message":"261","line":10,"column":17,"nodeType":"239","messageId":"240","endLine":10,"endColumn":30},{"ruleId":"256","severity":1,"message":"257","line":40,"column":17,"nodeType":"258","endLine":40,"endColumn":77},{"ruleId":"256","severity":1,"message":"257","line":89,"column":9,"nodeType":"258","endLine":89,"endColumn":49},{"ruleId":"237","severity":1,"message":"241","line":2,"column":31,"nodeType":"239","messageId":"240","endLine":2,"endColumn":39},{"ruleId":"237","severity":1,"message":"243","line":12,"column":10,"nodeType":"239","messageId":"240","endLine":12,"endColumn":14},{"ruleId":"237","severity":1,"message":"289","line":22,"column":10,"nodeType":"239","messageId":"240","endLine":22,"endColumn":18},{"ruleId":"237","severity":1,"message":"290","line":22,"column":20,"nodeType":"239","messageId":"240","endLine":22,"endColumn":31},{"ruleId":"237","severity":1,"message":"291","line":28,"column":5,"nodeType":"239","messageId":"240","endLine":28,"endColumn":20},{"ruleId":"245","severity":1,"message":"249","line":39,"column":6,"nodeType":"247","endLine":39,"endColumn":12,"suggestions":"292"},{"ruleId":"245","severity":1,"message":"246","line":48,"column":6,"nodeType":"247","endLine":48,"endColumn":13,"suggestions":"293"},{"ruleId":"237","severity":1,"message":"251","line":131,"column":13,"nodeType":"239","messageId":"240","endLine":131,"endColumn":24},{"ruleId":"237","severity":1,"message":"252","line":137,"column":13,"nodeType":"239","messageId":"240","endLine":137,"endColumn":22},{"ruleId":"237","severity":1,"message":"253","line":138,"column":13,"nodeType":"239","messageId":"240","endLine":138,"endColumn":25},{"ruleId":"237","severity":1,"message":"254","line":140,"column":13,"nodeType":"239","messageId":"240","endLine":140,"endColumn":18},{"ruleId":"237","severity":1,"message":"255","line":142,"column":13,"nodeType":"239","messageId":"240","endLine":142,"endColumn":23},{"ruleId":"256","severity":1,"message":"257","line":164,"column":15,"nodeType":"258","endLine":164,"endColumn":63},{"ruleId":"256","severity":1,"message":"257","line":7,"column":7,"nodeType":"258","endLine":7,"endColumn":55},{"ruleId":"237","severity":1,"message":"269","line":2,"column":27,"nodeType":"239","messageId":"240","endLine":2,"endColumn":35},{"ruleId":"237","severity":1,"message":"294","line":21,"column":9,"nodeType":"239","messageId":"240","endLine":21,"endColumn":20},{"ruleId":"265","severity":1,"message":"282","line":27,"column":24,"nodeType":"267","messageId":"268","endLine":27,"endColumn":26},{"ruleId":"265","severity":1,"message":"282","line":27,"column":53,"nodeType":"267","messageId":"268","endLine":27,"endColumn":55},{"ruleId":"237","severity":1,"message":"261","line":49,"column":17,"nodeType":"239","messageId":"240","endLine":49,"endColumn":30},{"ruleId":"237","severity":1,"message":"295","line":68,"column":17,"nodeType":"239","messageId":"240","endLine":68,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":95,"column":25,"nodeType":"267","messageId":"268","endLine":95,"endColumn":27},{"ruleId":"237","severity":1,"message":"295","line":143,"column":17,"nodeType":"239","messageId":"240","endLine":143,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":170,"column":25,"nodeType":"267","messageId":"268","endLine":170,"endColumn":27},{"ruleId":"245","severity":1,"message":"296","line":198,"column":6,"nodeType":"247","endLine":198,"endColumn":8,"suggestions":"297"},{"ruleId":"256","severity":1,"message":"257","line":385,"column":17,"nodeType":"258","endLine":385,"endColumn":70},{"ruleId":"256","severity":1,"message":"257","line":387,"column":17,"nodeType":"258","endLine":387,"endColumn":65},{"ruleId":"265","severity":1,"message":"266","line":395,"column":28,"nodeType":"267","messageId":"268","endLine":395,"endColumn":30},{"ruleId":"256","severity":1,"message":"257","line":411,"column":15,"nodeType":"258","endLine":415,"endColumn":17},{"ruleId":"256","severity":1,"message":"257","line":421,"column":15,"nodeType":"258","endLine":421,"endColumn":69},{"ruleId":"256","severity":1,"message":"257","line":423,"column":15,"nodeType":"258","endLine":423,"endColumn":64},{"ruleId":"256","severity":1,"message":"257","line":440,"column":25,"nodeType":"258","endLine":440,"endColumn":73},{"ruleId":"256","severity":1,"message":"257","line":442,"column":25,"nodeType":"258","endLine":442,"endColumn":72},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"237","severity":1,"message":"261","line":10,"column":17,"nodeType":"239","messageId":"240","endLine":10,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":49,"column":22,"nodeType":"267","messageId":"268","endLine":49,"endColumn":24},{"ruleId":"265","severity":1,"message":"266","line":66,"column":30,"nodeType":"267","messageId":"268","endLine":66,"endColumn":32},{"ruleId":"265","severity":1,"message":"282","line":107,"column":34,"nodeType":"267","messageId":"268","endLine":107,"endColumn":36},{"ruleId":"265","severity":1,"message":"282","line":140,"column":34,"nodeType":"267","messageId":"268","endLine":140,"endColumn":36},{"ruleId":"265","severity":1,"message":"282","line":141,"column":34,"nodeType":"267","messageId":"268","endLine":141,"endColumn":36},{"ruleId":"245","severity":1,"message":"302","line":166,"column":6,"nodeType":"247","endLine":166,"endColumn":8,"suggestions":"303"},{"ruleId":"256","severity":1,"message":"257","line":181,"column":17,"nodeType":"258","endLine":181,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":183,"column":17,"nodeType":"258","endLine":183,"endColumn":62},{"ruleId":"256","severity":1,"message":"257","line":200,"column":25,"nodeType":"258","endLine":200,"endColumn":71},{"ruleId":"256","severity":1,"message":"257","line":202,"column":25,"nodeType":"258","endLine":202,"endColumn":70},{"ruleId":"256","severity":1,"message":"257","line":238,"column":17,"nodeType":"258","endLine":238,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":240,"column":17,"nodeType":"258","endLine":240,"endColumn":62},{"ruleId":"256","severity":1,"message":"257","line":256,"column":23,"nodeType":"258","endLine":256,"endColumn":69},{"ruleId":"256","severity":1,"message":"257","line":258,"column":23,"nodeType":"258","endLine":258,"endColumn":68},{"ruleId":"256","severity":1,"message":"257","line":288,"column":13,"nodeType":"258","endLine":288,"endColumn":58},{"ruleId":"237","severity":1,"message":"304","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":27},{"ruleId":"245","severity":1,"message":"305","line":47,"column":6,"nodeType":"247","endLine":47,"endColumn":8,"suggestions":"306"},{"ruleId":"237","severity":1,"message":"307","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"286","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"237","severity":1,"message":"308","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":14},{"ruleId":"237","severity":1,"message":"288","line":10,"column":11,"nodeType":"239","messageId":"240","endLine":10,"endColumn":15},{"ruleId":"237","severity":1,"message":"261","line":10,"column":17,"nodeType":"239","messageId":"240","endLine":10,"endColumn":30},{"ruleId":"245","severity":1,"message":"309","line":67,"column":6,"nodeType":"247","endLine":67,"endColumn":14,"suggestions":"310"},{"ruleId":"256","severity":1,"message":"257","line":78,"column":17,"nodeType":"258","endLine":78,"endColumn":62},{"ruleId":"256","severity":1,"message":"257","line":127,"column":9,"nodeType":"258","endLine":127,"endColumn":49},{"ruleId":"237","severity":1,"message":"286","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"237","severity":1,"message":"308","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":14},{"ruleId":"237","severity":1,"message":"261","line":10,"column":17,"nodeType":"239","messageId":"240","endLine":10,"endColumn":30},{"ruleId":"245","severity":1,"message":"311","line":47,"column":6,"nodeType":"247","endLine":47,"endColumn":8,"suggestions":"312"},{"ruleId":"256","severity":1,"message":"257","line":57,"column":17,"nodeType":"258","endLine":57,"endColumn":62},{"ruleId":"256","severity":1,"message":"257","line":88,"column":9,"nodeType":"258","endLine":88,"endColumn":49},{"ruleId":"237","severity":1,"message":"261","line":38,"column":17,"nodeType":"239","messageId":"240","endLine":38,"endColumn":30},{"ruleId":"237","severity":1,"message":"295","line":57,"column":17,"nodeType":"239","messageId":"240","endLine":57,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":84,"column":25,"nodeType":"267","messageId":"268","endLine":84,"endColumn":27},{"ruleId":"245","severity":1,"message":"313","line":112,"column":6,"nodeType":"247","endLine":112,"endColumn":8,"suggestions":"314"},{"ruleId":"237","severity":1,"message":"295","line":127,"column":17,"nodeType":"239","messageId":"240","endLine":127,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":154,"column":25,"nodeType":"267","messageId":"268","endLine":154,"endColumn":27},{"ruleId":"256","severity":1,"message":"257","line":375,"column":17,"nodeType":"258","endLine":375,"endColumn":70},{"ruleId":"256","severity":1,"message":"257","line":377,"column":17,"nodeType":"258","endLine":377,"endColumn":65},{"ruleId":"256","severity":1,"message":"257","line":401,"column":15,"nodeType":"258","endLine":406,"endColumn":17},{"ruleId":"256","severity":1,"message":"257","line":412,"column":15,"nodeType":"258","endLine":412,"endColumn":69},{"ruleId":"256","severity":1,"message":"257","line":414,"column":15,"nodeType":"258","endLine":414,"endColumn":64},{"ruleId":"256","severity":1,"message":"257","line":430,"column":23,"nodeType":"258","endLine":430,"endColumn":71},{"ruleId":"237","severity":1,"message":"315","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":3,"column":1,"nodeType":"318","endLine":55,"endColumn":3},{"ruleId":"319","severity":1,"message":"320","line":4,"column":3,"nodeType":"321","messageId":"322","endLine":54,"endColumn":4},"no-unused-vars","'useToasts' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'UserOutlined' is defined but never used.","'auth' is defined but never used.","'ToastProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["323"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["324"],"'accessToken' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InboxOutlined' is defined but never used.","'Link' is defined but never used.","'updateProfile' is assigned a value but never used.",["325"],["326"],"'handleOk' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'AppleOutlined' is defined but never used.","'AndroidOutlined' is defined but never used.","'Post' is defined but never used.","'addToast' is assigned a value but never used.","'update' is assigned a value but never used.","'url' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history', 'user.following', and 'userName'. Either include them or remove the dependency array.",["327"],"'setConfirmLoading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'buttonItemLayout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Heart' is defined but never used.","'Spin' is defined but never used.","'user' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.",["328"],["329"],"'arraysEqual' is assigned a value but never used.","'newComments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postId' and 'props.history'. Either include them or remove the dependency array.",["330"],"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["333"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'state.user'. Either include it or remove the dependency array.",["334"],"'React' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'posts' and 'props.userName'. Either include them or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["336"],"React Hook useEffect has missing dependencies: 'props.history' and 'props.id'. Either include them or remove the dependency array.",["337"],"'act' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"340","fix":"348"},{"desc":"338","fix":"349"},{"desc":"350","fix":"351"},"no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},"Update the dependencies array to be: [addToast, error]",{"range":"362","text":"363"},"Update the dependencies array to be: [props.history, user]",{"range":"364","text":"365"},"Update the dependencies array to be: [addToast, update]",{"range":"366","text":"367"},"Update the dependencies array to be: [addToast, posted]",{"range":"368","text":"369"},"Update the dependencies array to be: [props.history, user.following, userName]",{"range":"370","text":"371"},{"range":"372","text":"365"},{"range":"373","text":"363"},"Update the dependencies array to be: [postId, props.history]",{"range":"374","text":"375"},"Update the dependencies array to be: [user]",{"range":"376","text":"377"},"Update the dependencies array to be: [state.user]",{"range":"378","text":"379"},"Update the dependencies array to be: [posted, posts, props.userName]",{"range":"380","text":"381"},"Update the dependencies array to be: [user.email]",{"range":"382","text":"383"},"Update the dependencies array to be: [props.history, props.id]",{"range":"384","text":"385"},[1136,1143],"[addToast, error]",[1227,1233],"[props.history, user]",[1375,1383],"[addToast, update]",[1987,1995],"[addToast, posted]",[2094,2096],"[props.history, user.following, userName]",[1193,1199],[1341,1348],[5697,5699],"[postId, props.history]",[4829,4831],"[user]",[1270,1272],"[state.user]",[2086,2094],"[posted, posts, props.userName]",[1303,1305],"[user.email]",[3201,3203],"[props.history, props.id]"]